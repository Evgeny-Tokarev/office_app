name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      PG_PORT: ${{ secrets.PG_PORT }}
      PG_HOST: ${{ secrets.PG_HOST }}
      PG_DB_NAME: ${{ secrets.PG_DB_NAME }}
      PG_USER: ${{ secrets.PG_USER }}
      PG_PWD: ${{ secrets.PG_PWD }}
      LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: db
          POSTGRES_DB: db
          POSTGRES_PASSWORD: db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5458:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install sql-migrate
        working-directory: ./backend
        run: go install github.com/rubenv/sql-migrate/...@latest

      - name: Run migrations
        working-directory: ./backend
        run: make migrate-up

      - name: Debug Environment
        run: |
          pwd
          ls -al

      - name: Test
        working-directory: ./backend
        run: go test -v -cover ./internal/repositories/...
